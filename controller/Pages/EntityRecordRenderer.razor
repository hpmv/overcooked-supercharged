@using Google.Protobuf
@using Newtonsoft.Json

<div class="one-record">
    <div class="record-title @(Record.existed[Frame] ? "record-exists" : "record-does-not-exist")">
        @(Record.displayName) [@(Record.path)] @(Record.position[Frame])
        @if (Record.spawnOwner[Frame] != -1) {
            <span> (o: @(Record.spawnOwner[Frame])</span>
        }
        @{
            if (Record.progress[Frame] > 0) {
                <span> (p: @(Record.progress[Frame]))</span>
            }
        }
        <button @onclick="() => ShowDetails = !ShowDetails">@(ShowDetails ? "-":"+")</button>
    </div>
    @if (ShowDetails) {
        <div class="record-details">
            <pre>
                Position: @(Record.position[Frame])
                Velocity: @(Record.velocity[Frame])
                Data: @(ToJson(Record.data[Frame].ToProto()))
                Progress: @(Record.progress[Frame])
                @if (Record.chefState != null) {
                    @("Chef: " + ToJson(Record.chefState[Frame].ToProto()))
                }
                Spawn Owner: @(Record.spawnOwner[Frame])
            </pre>
        </div>
    }
    <div class="record-children">
        @foreach (var spawned in Record.spawned) {
            <EntityRecordRenderer Record="@spawned" Frame="@Frame"></EntityRecordRenderer>
        }
    </div>
</div>

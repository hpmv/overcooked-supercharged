@inject IJSRuntime JSRuntime

<div class="entity-record-renderer" @ref="canvasRef">
    @foreach (var record in Records.GenAllEntities()) {
        if (record.existed[Frame] && !record.displayName.Contains("Rigidbody") && !record.displayName.Contains("Content")) {
            var pos = record.position[Frame].XZ();
            var rendered = Render(pos);
            <div class="record-vis-anchor"
                style="left: @(rendered.X)px; top: @(rendered.Y)px;"
            >
                <div class="record-vis-holder">
                    <div class="record-vis record-vis-type-@(record.className)"
                        data-entity-path="@(record.path)">
                        @(record.displayName)
                    </div>
                </div>
            </div>
        }
    }
    <div @ref="EntityMenuAnchor" style="position: absolute; left: @(EntityMenuX)px; top: @(EntityMenuY)px;"></div>

    <MatMenu @ref="Menu">
        @foreach (var entity in EntitiesForMenu) {
            var actionTemplates = EditorState.GetActionTemplatesForEntity(entity);
            <MatListGroup>
                <MatListGroupSubHeader>@(entity.displayName)</MatListGroupSubHeader>
                <MatList>
                    @foreach (var template in actionTemplates) {
                        <MatListItem OnClick="() => HandleTemplateClick(template)">
                            <div style="margin-left: 20px">@(template.Describe())</div>
                        </MatListItem>
                    }
                </MatList>
            </MatListGroup>
        }
    </MatMenu>
</div>